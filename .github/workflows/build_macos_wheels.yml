name: Build MacOS wheels
run-name: Build MacOS wheels on branch '${{ github.ref_name }}'
# on: push
on: workflow_dispatch
jobs:
  build_wheels:
    strategy:
      matrix:
        py: [cp36, cp37, cp38, cp39, cp310]
        arch:
          - [x86_64, macosx_x86_64]
    name: ${{ matrix.py }}-${{ matrix.arch[1] }}
    runs-on: macos-11
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Compiled OpenBLAS
        uses: dawidd6/action-download-artifact@v2 # TODO: only @v2??
        with:
          workflow: compile_OpenBLAS_macos.yml
          workflow_conclusion: success
          commit: ${{github.event.pull_request.head.sha}}
          name: OpenBLAS_macos_${{ matrix.arch[0] }}
          path: OpenBLAS
          search_artifacts: true

      - name: Set up configuration file
        run: |
          python3 setup_config.py openblas openblas ${{ github.workspace }}/OpenBLAS/lib ${{ github.workspace }}/OpenBLAS/include

      - name: Build wheel ${{ matrix.py }}-${{ matrix.arch[1] }}
        uses: pypa/cibuildwheel@v2.12.0
        env:
          MACOSX_DEPLOYMENT_TARGET: 10.9
          CIBW_PLATFORM: macos
          CIBW_BUILD: ${{ matrix.py }}-${{ matrix.arch[1] }}
          CIBW_ARCHS_MACOS: ${{ matrix.arch[0] }}
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: >
            DYLD_LIBRARY_PATH=${{ github.workspace }}/OpenBLAS/lib delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}
          CIBW_BEFORE_TEST_MACOS: >
            7z x test/demo.zip -o"test/demo"

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels_macos_${{ matrix.arch[0] }}
          path: ./wheelhouse/*.whl

  # arm64_check:
  #   name: Create check for arm64
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: Create check
  #       run: | # TODO: create check in the right check suite
  #         curl -X DELETE -H "Accept:application/vnd.github+json" -H "Authorization:Bearer ${{ secrets.TEST_TOKEN }}" -H "X-GitHub-Api-Version:2022-11-28" https://api.github.com/repos/nightwnvol/amico_gh_actions/actions/variables/CHECK_ARM64_ID
  #         CHECK_ARM64_ID=$(curl -X POST -H "Accept:application/vnd.github+json" -H "Authorization:Bearer ${{ github.token }}" -H "X-GitHub-Api-Version:2022-11-28" https://api.github.com/repos/nightwnvol/amico_gh_actions/check-runs -d '{"name":"arm64_check","status":"in_progress","head_sha":"'"${{github.sha}}"'"}' | jq -r .id)
  #         curl -X POST -H "Accept:application/vnd.github+json" -H "Authorization:Bearer ${{ secrets.TEST_TOKEN }}" -H "X-GitHub-Api-Version:2022-11-28" https://api.github.com/repos/nightwnvol/amico_gh_actions/actions/variables -d '{"name":"CHECK_ARM64_ID","value":"'"${CHECK_ARM64_ID}"'"}'
  
  build_arm64_wheels:
    name: '*-macosx_arm64'
    runs-on: ubuntu-20.04
    steps:
      - name: Waiting for CirrusCI
        run: |
          sleep 3s

      - name: Download from Cirrus CI
        run: |
          curl -L -o wheels_macos_arm64.zip https://api.cirrus-ci.com/v1/artifact/build/${{ inputs.cirrus_build_id }}/build_macos_wheels/wheels_macos_arm64.zip
          unzip wheels_macos_arm64.zip

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels_macos_arm64
          path: ./wheelhouse/*.whl
