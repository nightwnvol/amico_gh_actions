name: Build wheels
on: workflow_dispatch
jobs:
  windows_wheels:
    strategy:
      matrix:
        py: [cp37, cp38, cp39, cp310]
        arch:
          - [AMD64, win_amd64, x64]
          - [x86, win32, x86]
    name: Windows wheels
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build wheel (${{ matrix.arch[0] }}, ${{ matrix.py }})
        # continue-on-error: true # TODO false
        uses: pypa/cibuildwheel@v2.11.2
        env:
          CIBW_PLATFORM: windows
          CIBW_BUILD: ${{ matrix.py }}-${{ matrix.arch[1] }}
          CIBW_ARCHS_WINDOWS: ${{ matrix.arch[0] }}
          CIBW_ENVIRONMENT_WINDOWS: OPENBLAS_DIR=$(pwd)\\OpenBLAS
          CIBW_BEFORE_ALL_WINDOWS: >
            echo CIAO
            echo $env:OPENBLAS_DIR
            7z x test/demo.zip -o"test/demo" &&
            curl -L -o OpenBLAS-0.3.21.zip https://github.com/xianyi/OpenBLAS/releases/download/v0.3.21/OpenBLAS-0.3.21-${{ matrix.arch[2] }}.zip &&
            7z x OpenBLAS-0.3.21.zip -o"OpenBLAS"
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  macos_x86_64_wheels:
    strategy:
      matrix:
        py: [cp37, cp38, cp39, cp310]
        arch:
          - [x86_64, macosx_x86_64, SANDYBRIDGE]
    name: MacOS (x86_64) wheels
    runs-on: macos-11
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build wheel (${{ matrix.arch[0] }}, ${{ matrix.py }})
        # continue-on-error: true # TODO false
        uses: pypa/cibuildwheel@v2.11.2
        env:
          CIBW_PLATFORM: macos
          CIBW_BUILD: ${{ matrix.py }}-${{ matrix.arch[1] }}
          CIBW_ARCHS_MACOS: ${{ matrix.arch[0] }}
          CIBW_ENVIRONMENT_MACOS: MACOSX_DEPLOYMENT_TARGET="10.9" OPENBLAS_DIR="$(pwd)/OpenBLAS"
          CIBW_BEFORE_ALL_MACOS: >
            7z x test/demo.zip -o"test/demo" &&
            curl -L -o OpenBLAS-0.3.21.tar.gz https://github.com/xianyi/OpenBLAS/releases/download/v0.3.21/OpenBLAS-0.3.21.tar.gz &&
            tar -xzf OpenBLAS-0.3.21.tar.gz &&
            make -C OpenBLAS-0.3.21 TARGET=${{ matrix.arch[2] }} DYNAMIC_ARCH=1 &&
            make install -C OpenBLAS-0.3.21 PREFIX=$(pwd)/OpenBLAS
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  linux_wheels:
    strategy:
      matrix:
        py: [cp37, cp38, cp39, cp310]
        arch:
          - [x86_64, manylinux_x86_64, HASWELL, amd64]
          - [aarch64, manylinux_aarch64, ARMV8, arm64]
    name: Linux wheels
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: ${{ matrix.arch[3] }}

      - name: Build wheel (${{ matrix.arch[0] }}, ${{ matrix.py }})
        # continue-on-error: true # TODO false
        timeout-minutes: 600
        uses: pypa/cibuildwheel@v2.11.2
        env:
          CIBW_PLATFORM: linux
          CIBW_BUILD: ${{ matrix.py }}-${{ matrix.arch[1] }}
          CIBW_ARCHS_LINUX: ${{ matrix.arch[0] }}
          CIBW_ENVIRONMENT_LINUX: OPENBLAS_DIR="$(pwd)/OpenBLAS"
          CIBW_BEFORE_ALL_LINUX: >
            unzip test/demo.zip -d test/demo &&
            curl -L -o OpenBLAS-0.3.21.tar.gz https://github.com/xianyi/OpenBLAS/releases/download/v0.3.21/OpenBLAS-0.3.21.tar.gz &&
            tar -xzf OpenBLAS-0.3.21.tar.gz &&
            make -C OpenBLAS-0.3.21 TARGET=${{ matrix.arch[2] }} DYNAMIC_ARCH=1 &&
            make install -C OpenBLAS-0.3.21 PREFIX=$(pwd)/OpenBLAS
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
