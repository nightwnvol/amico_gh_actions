name: Build Windows wheels
run-name: Build Windows wheels on branch '${{ github.ref_name }}'
on: push
# on: workflow_dispatch
jobs:
  build_wheels:
    strategy:
      matrix:
        py: [cp36, cp37, cp38, cp39, cp310]
        arch:
          - [AMD64, win_amd64, x64]
          - [x86, win32, x86]
    name: ${{ matrix.py }}-${{ matrix.arch[1] }}
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Compiled OpenBLAS
        run: |
          curl -L -o OpenBLAS-0.3.21.zip https://github.com/xianyi/OpenBLAS/releases/download/v0.3.21/OpenBLAS-0.3.21-${{ matrix.arch[2] }}.zip
          7z x OpenBLAS-0.3.21.zip -o"OpenBLAS"

      - name: Set up configuration file
        run: |
          python setup_config.py openblas libopenblas ${{ github.workspace }}\OpenBLAS\lib ${{ github.workspace }}\OpenBLAS\include

      - name: Build wheel ${{ matrix.py }}-${{ matrix.arch[1] }}
        uses: pypa/cibuildwheel@v2.12.0
        env:
          CIBW_PLATFORM: windows
          CIBW_BUILD: ${{ matrix.py }}-${{ matrix.arch[1] }}
          CIBW_ARCHS_WINDOWS: ${{ matrix.arch[0] }}
          CIBW_BEFORE_BUILD_WINDOWS: >
            pip install delvewheel
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: >
            delvewheel repair --add-path ${{ github.workspace }}\OpenBLAS\bin -w {dest_dir} -v {wheel}
          CIBW_BEFORE_TEST_WINDOWS: >
            7z x test/demo.zip -o"test/demo"
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels_windows_${{ matrix.arch[0] }}
          path: ./wheelhouse/*.whl

  # build_sdist NOTE: requested only one time

  upload_wheels:
    needs: build_wheels
    name: Upload Windows wheels
    runs-on: ubuntu-20.04
    if: ${{ github.ref_name == 'main' }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          path: artifacts
        
      - name: Publish package to PyPI Test
        uses: pypa/gh-action-pypi-publish@v1.6.4
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          packages_dir: artifacts/**
