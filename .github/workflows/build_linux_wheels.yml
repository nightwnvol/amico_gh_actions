# TODO: replace env var name TEST_TOKEN, OB_X86_64, OB_AARCH64
name: Build Linux wheels
run-name: Build Linux wheels on branch '${{ github.ref_name }}'
on: workflow_dispatch
jobs:
  build_wheels:
    strategy:
      matrix:
        py: [cp36, cp37, cp38, cp39, cp310]
        arch:
          - [x86_64, manylinux_x86_64, amd64]
          - [aarch64, manylinux_aarch64, arm64]
    name: ${{ matrix.py }}-${{ matrix.arch[1] }}
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # - name: Download compiled OpenBLAS (x86_64)
      #   if: ${{ matrix.arch[0] == 'x86_64' }}
      #   run: |
      #     curl -L -o OpenBLAS_macos_${{ matrix.arch[0] }}.zip -H "Accept:application/vnd.github+json" -H "Authorization:Bearer ${{ secrets.TEST_TOKEN }}" -H "X-GitHub-Api-Version:2022-11-28" https://api.github.com/repos/nightwnvol/amico_gh_actions/actions/artifacts/${{ vars.OB_X86_64 }}/zip
      #     7z x OpenBLAS_macos_${{ matrix.arch[0] }}.zip -o"OpenBLAS" # TODO: no OpenBLAS_macos

      # - name: Download compiled OpenBLAS (aarch64)
      #   if: ${{ matrix.arch[0] == 'aarch64' }}
      #   run: |
      #     curl -L -o OpenBLAS_macos_${{ matrix.arch[0] }}.zip -H "Accept:application/vnd.github+json" -H "Authorization:Bearer ${{ secrets.TEST_TOKEN }}" -H "X-GitHub-Api-Version:2022-11-28" https://api.github.com/repos/nightwnvol/amico_gh_actions/actions/artifacts/${{ vars.OB_AARCH64 }}/zip
      #     7z x OpenBLAS_macos_${{ matrix.arch[0] }}.zip -o"OpenBLAS"

      - name: Download Compiled OpenBLAS
        uses: dawidd6/action-download-artifact@v2 # TODO: only @v2??
        with:
          # Optional, GitHub token, a Personal Access Token with `public_repo` scope if needed
          # Required, if the artifact is from a different repo
          # Required, if the repo is private a Personal Access Token with `repo` scope is needed
          # github_token: ${{secrets.GITHUB_TOKEN}}

          # Optional, workflow file name or ID
          # If not specified, will be inferred from run_id (if run_id is specified), or will be the current workflow
          workflow: compile_OpenBLAS_linux.yml

          # Optional, the status or conclusion of a completed workflow to search for
          # Can be one of a workflow conclusion:
          #   "failure", "success", "neutral", "cancelled", "skipped", "timed_out", "action_required"
          # Or a workflow status:
          #   "completed", "in_progress", "queued"
          # Use the empty string ("") to ignore status or conclusion in the search
          workflow_conclusion: success

          # Optional, will get head commit SHA
          # pr: ${{github.event.pull_request.number}}

          # Optional, no need to specify if PR is
          commit: ${{github.event.pull_request.head.sha}}

          # Optional, will use the specified branch. Defaults to all branches
          # branch: master

          # Optional, defaults to all types
          # event: push

          # Optional, will use specified workflow run
          # run_id: 1122334455

          # Optional, run number from the workflow
          # run_number: 34

          # Optional, uploaded artifact name,
          # will download all artifacts if not specified
          # and extract them into respective subdirectories
          # https://github.com/actions/download-artifact#download-all-artifacts
          name: OpenBLAS_linux_${{ matrix.arch[0] }}

          # Optional, a directory where to extract artifact(s), defaults to the current directory
          path: OpenBLAS

          # Optional, defaults to current repo
          # repo: ${{ github.repository }}

          # Optional, check the workflow run to whether it has an artifact
          # then will get the last available artifact from the previous workflow
          # default false, just try to download from the last one
          # check_artifacts:  false

          # Optional, search for the last workflow run whose stored an artifact named as in `name` input
          # default false
          search_artifacts: true

          # Optional, choose to skip unpacking the downloaded artifact(s)
          # default false
          # skip_unpack: false

          # Optional, choose how to exit the action if no artifact is found
          # can be one of:
          #  "fail", "warn", "ignore"
          # default fail
          if_no_artifact_found: fail

      - name: Set up configuration file
        run: |
          python setup_config.py openblas openblas /host${{ github.workspace }}/OpenBLAS/lib /host${{ github.workspace }}/OpenBLAS/include
        # NOTE: need to add '/host' because they will be paths into a Docker container

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: ${{ matrix.arch[2] }}

      - name: Build wheel ${{ matrix.py }}-${{ matrix.arch[1] }}
        uses: pypa/cibuildwheel@v2.12.0
        env:
          CIBW_PLATFORM: linux
          CIBW_BUILD: ${{ matrix.py }}-${{ matrix.arch[1] }}
          CIBW_ARCHS_LINUX: ${{ matrix.arch[0] }}
          CIBW_REPAIR_WHEEL_COMMAND_LINUX: >
            LD_LIBRARY_PATH=/host${{ github.workspace }}/OpenBLAS/lib auditwheel repair -w {dest_dir} {wheel}
          CIBW_BEFORE_TEST_LINUX: >
            unzip test/demo.zip -d test/demo

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels_linux_${{ matrix.arch[0] }}
          path: ./wheelhouse/*.whl
