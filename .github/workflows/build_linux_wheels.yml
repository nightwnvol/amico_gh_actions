name: Build Linux wheels
run-name: Build Linux wheels on branch '${{ github.ref_name }}'
on: push
jobs:
  build_wheels:
    strategy:
      matrix:
        py: [cp36, cp37, cp38, cp39, cp310]
        arch:
          - [x86_64, manylinux_x86_64, amd64]
          - [aarch64, manylinux_aarch64, arm64]
    name: ${{ matrix.py }}-${{ matrix.arch[1] }}
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Compiled OpenBLAS
        uses: dawidd6/action-download-artifact@v2 # TODO: only @v2??
        with:
          workflow: compile_OpenBLAS_linux.yml
          workflow_conclusion: success
          commit: ${{github.event.pull_request.head.sha}}
          name: OpenBLAS_linux_${{ matrix.arch[0] }}
          path: OpenBLAS
          search_artifacts: true

      - name: Set up configuration file
        run: |
          python setup_config.py openblas openblas /host${{ github.workspace }}/OpenBLAS/lib /host${{ github.workspace }}/OpenBLAS/include
        # NOTE: need to add '/host' because they will be paths into a Docker container

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: ${{ matrix.arch[2] }}

      - name: Build wheel ${{ matrix.py }}-${{ matrix.arch[1] }}
        uses: pypa/cibuildwheel@v2.12.0
        env:
          CIBW_PLATFORM: linux
          CIBW_BUILD: ${{ matrix.py }}-${{ matrix.arch[1] }}
          CIBW_ARCHS_LINUX: ${{ matrix.arch[0] }}
          CIBW_REPAIR_WHEEL_COMMAND_LINUX: >
            LD_LIBRARY_PATH=/host${{ github.workspace }}/OpenBLAS/lib auditwheel repair -w {dest_dir} {wheel}
          CIBW_BEFORE_TEST_LINUX: >
            unzip test/demo.zip -d test/demo

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels_linux_${{ matrix.arch[0] }}
          path: ./wheelhouse/*.whl
