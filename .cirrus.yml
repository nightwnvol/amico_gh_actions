# TODO: badges
# TODO: add name and alias
compile_OpenBLAS_macos_task:
  trigger_type: manual
  macos_instance:
    image: ghcr.io/cirruslabs/macos-monterey-xcode
  env:
    MACOSX_DEPLOYMENT_TARGET: "11.0"
  clone_script: # TODO: name Clone?
    - echo SKIP CLONE
  install_requirements_script:
    - brew install p7zip
  compile_OpenBLAS_arm64_script:
    - curl -L -o OpenBLAS-0.3.21.tar.gz https://github.com/xianyi/OpenBLAS/releases/download/v0.3.21/OpenBLAS-0.3.21.tar.gz
    - tar -xzf OpenBLAS-0.3.21.tar.gz
    - make -C OpenBLAS-0.3.21 TARGET=ARMV8 DYNAMIC_ARCH=1
    - make install -C OpenBLAS-0.3.21 PREFIX=${CIRRUS_WORKING_DIR}/OpenBLAS
    - 7z a OpenBLAS_macos_arm64.zip ./OpenBLAS/*
  compiled_OpenBLAS_artifacts:
    path: 'OpenBLAS_macos_arm64.zip'

build_macos_wheels_task:
  name: Build MacOS wheels
  alias: build_macos_wheels
  trigger_type: manual
  macos_instance:
    image: ghcr.io/cirruslabs/macos-monterey-xcode
  matrix:
    - env:
        CP: "38"
    - env:
        CP: "39"
    - env:
        CP: "310"
  env:
    MACOSX_DEPLOYMENT_TARGET: 11.0
    PATH: ${PATH}:/opt/homebrew/opt/python@3.10/bin
    CIBW_PLATFORM: macos
    CIBW_BUILD: cp${CP}-macosx_arm64
    CIBW_ARCHS_MACOS: arm64
    CIBW_REPAIR_WHEEL_COMMAND_MACOS: >
      DYLD_LIBRARY_PATH=${CIRRUS_WORKING_DIR}/OpenBLAS/lib delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}
    CIBW_BEFORE_TEST_MACOS: >
      7z x test/demo.zip -o"test/demo"
  install_requirements_script:
    - brew install p7zip
    - brew install python@3.10
    - python3.10 -m pip install cibuildwheel==2.12.0
  download_compiled_OpenBLAS_script:
    - curl -L -o OpenBLAS.zip https://api.cirrus-ci.com/v1/artifact/build/${OPENBLAS_BUILD_ID}/compile_OpenBLAS_macos/compiled_OpenBLAS/OpenBLAS_macos_arm64.zip?branch=main
    - 7z x OpenBLAS.zip -o"OpenBLAS"
  set_up_configuration_file_script:
    - python3.10 setup_config.py openblas openblas ${CIRRUS_WORKING_DIR}/OpenBLAS/lib ${CIRRUS_WORKING_DIR}/OpenBLAS/include
  run_cibuildwheel_script:
    - cibuildwheel
  wheels_macos_arm64_artifacts:
    path: './wheelhouse/*.whl'

# TODO: to test
trigger_github_task:
  name: Trigger GitHub job
  # depends_on: build_macos_wheels
  trigger_type: manual
  # only_if: $CIRRUS_BRANCH == 'main'
  macos_instance:
    image: ghcr.io/cirruslabs/macos-monterey-xcode
  clone_script:
    - echo SKIP CLONE
  download_script:
    - curl -X POST -H "Accept:application/vnd.github+json" -H "Authorization:Bearer ${DOWNLOAD_TOKEN}" -H "X-GitHub-Api-Version:2022-11-28" https://api.github.com/repos/nightwnvol/amico_gh_actions/actions/workflows/dowload_macos_arm64/dispatches -d "{\"ref\":\"${CIRRUS_BRANCH}\",\"inputs\":{\"passed\":true,\"cirrus_build_id\":6043474621890560}}"

# trigger_github_task:
#   name: Trigger GitHub job
#   depends_on: build_macos_wheels
#   # only_if: $CIRRUS_BRANCH == 'main'
#   macos_instance:
#     image: ghcr.io/cirruslabs/macos-monterey-xcode
#   clone_script:
#     - echo SKIP CLONE
#   download_script:
#     - curl -X POST -H "Accept:application/vnd.github+json" -H "Authorization:Bearer ${DOWNLOAD_TOKEN}" -H "X-GitHub-Api-Version:2022-11-28" https://api.github.com/repos/nightwnvol/amico_gh_actions/dispatches -d "{\"event_type\":\"macos_arm64_wheels\",\"client_payload\":{\"passed\":true,\"build_id\":\"${CIRRUS_BUILD_ID}\"}}"
